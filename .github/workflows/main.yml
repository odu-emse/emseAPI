name: EMSE-API - Main pipeline

on:
  pull_request:
    branches: [ master ]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Set up Node
        uses: actions/setup-node@v3
        with:
          node-version: '18'
      - uses: actions/cache@v3
        with:
          path: '**/node_modules'
          key: ${{ runner.os }}-modules-${{ hashFiles('**/yarn.lock') }}
      - name: Install dependencies
        run: yarn
      - name: Export DB URL
        run: echo "DATABASE_URL=${{secrets.DATABASE_URL}}" > .env
      - name: Generate Prisma types
        run: yarn generate
      - name: Build application
        run: yarn nest build
  test:
    needs: [build]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Use Node
        uses: actions/setup-node@v3
        with:
          node-version: 18
      - uses: actions/cache@v3
        with:
          path: '**/node_modules'
          key: ${{ runner.os }}-modules-${{ hashFiles('**/yarn.lock') }}
      - name: Install dependencies
        run: yarn
      - name: Export environment variables
        run: echo "DATABASE_URL=${{secrets.DATABASE_URL}}" > .env
      - name: Generate types
        run: yarn generate
      - name: Run test suite
        run: yarn vitest
  coverage:
    needs: [test]
    runs-on: ubuntu-latest
    name: Create Coverage Report
    steps:
      - uses: actions/checkout@v3
      - name: Use Node
        uses: actions/setup-node@v3
        with:
          node-version: 18
      - uses: actions/cache@v3
        with:
          path: '**/node_modules'
          key: ${{ runner.os }}-modules-${{ hashFiles('**/yarn.lock') }}
      - name: Install dependencies
        run: yarn
      - name: Export environment variables
        run: echo "DATABASE_URL=${{secrets.DATABASE_URL}}" > .env
      - name: Build types
        run: yarn generate
      - name: Run tests and collect coverage
        run: yarn vitest --coverage
      - name: Upload coverage reports to Codecov
        run: |
          curl -Os https://uploader.codecov.io/latest/linux/codecov
          chmod +x codecov
          ./codecov -t ba891e32-a8ac-42aa-be84-f7ad7837b34f
  docs:
    runs-on: ubuntu-latest
    name: Create Docs
    steps:
      - uses: actions/checkout@v3
      - name: Use Node
        uses: actions/setup-node@v3
        with:
          node-version: 18
      - uses: actions/cache@v3
        with:
          path: '**/node_modules'
          key: ${{ runner.os }}-modules-${{ hashFiles('**/yarn.lock') }}
      - name: Install dependencies
        run: yarn
      - name: Export environment variables
        run: echo "DATABASE_URL=${{secrets.DATABASE_URL}}" > .env
      - name: Build types
        run: yarn generate
      - name: Generate docs
        run: yarn docs:gen
      - name: Deploy docs
        uses: JamesIves/github-pages-deploy-action@v4
        with:
          folder: docs
