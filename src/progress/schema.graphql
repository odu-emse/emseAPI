type Progress {
    """
    The database defined ID of the progress document
    """
    id: ID!
    """
    The numerical status of the progress 0% - 100%
    """
    status: Float!
    """
    A boolean to conveniently check if the progress is completed
    """
    completed: Boolean!
    """
    The date the progress was created
    """
    createdAt: Date!
    """
    The date the progress was last updated
    """
    updatedAt: Date!
    """
    The enrollment that this progress is associated with (one-to-one)
    """
    enrollment: ModuleEnrollment!
}

input ProgressArgs {
    """
    The database defined ID of the progress document
    """
    id: ID
    completed: Boolean
    status: Float
    createdAt: Date
    updatedAt: Date
    enrollmentID: ID
}

input ProgressWaiveArgs {
    """
    The database defined ID of the enrollment document that holds the progress to be waived. If this is given, the other parameters will be ignored.
    """
    enrollmentID: ID
    """
    The database defined ID of the module that holds the enrollment to be accredited.
    """
    moduleID: ID
    """
    The database defined ID of the plan of study that holds the enrollment to be accredited.
    """
    planID: ID
}

type Query {
    """
    Get a progress document by the given parameters. If no parameters are given, all progress documents will be returned. If the ID or enrollmentID is given, the other parameters will be ignored, and the returned document is always unique.
    """
    progress(
        """
        The database defined ID of the progress document
        """
        args: ProgressArgs!
    ): [Progress]!
}

type Mutation {
    createProgress(
        input: ProgressArgs!
        enrollmentID: ID!
    ): Progress!

    waiveModule(
        args: ProgressWaiveArgs!
    ): Progress!

    """
    Delete a progress document by the given ID. Returns true if the document was deleted, Error otherwise.
    """
    deleteProgress(
        """
        The database defined ID of the progress document to be deleted
        """
        id: ID!
    ): Boolean!

    updateProgress(
        id: ID!
        status: Float!
    ): Progress!
}