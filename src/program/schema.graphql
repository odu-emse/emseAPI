enum UserRole {
	STUDENT
	TEACHER
	GRADER
}

type ModuleEnrollment {
	id: ID!
	enrolledAt: String!

	role: UserRole!
	module: Module!
	plan: ID!
}

type AssignmentResult {
	id: ID!
	sumbittedAt: String!
	result: Float!

	student: ID
	gradedBy: ID
	assignment: Assignment
}

type Assignment {
	id: ID!
	updatedAt: String!
	name: String!
	dueAt: String

	module: Module
	assignmentResults: [AssignmentResult]
}

type ModuleFeedback {
	id: ID!
	feedback: String!
	rating: Int!

	student: User
	module: Module
}

type CourseEnrollment {
	id: ID!
	enrolledAt: String!

	student: ID
	course: Course
}

type Course {
	id: ID!
	name: String!

	enrollment: [CourseEnrollment]
	modules: [ModuleInCourse]
}

type Module {
	id: ID!
	moduleNumber: Int!
	moduleName: String!
	description: String!
	duration: Float!
	intro: String!
	numSlides: Int!
	keywords: [String!]!
	createdAt: String!
	updatedAt: String!

	assignments: [Assignment]
	members: [ModuleEnrollment]
	feedback: [ModuleFeedback]
	parentCourses: [ModuleInCourse]
}

type ModuleInCourse {
	id: ID!

	module: Module
	course: Course
}

type Error {
	message: String
}

type Query {
	modules: [Module!]!
	module(id: ID!): Module
	courses: [Course!]!
	assignments: [Assignment!]!
	assignment(id: ID!): Assignment
	moduleInCourses: [ModuleInCourse!]!
	moduleFeedbacks: [ModuleFeedback!]!
	moduleFeedback(id: ID!): ModuleFeedback
}

input NewModule {
	moduleNumber: Int!
	moduleName: String!
	description: String!
	duration: Float!
	intro: String!
	numSlides: Int!
	keywords: [String!]!
}

input UpdateModule {
	id: ID!
	moduleName: String
	moduleNumber: Int
	intro: String
	description: String
	duration: Float
	numSlides: Int
	
	keywords: [String!]
	assignment: NewAssignment
}

input NewAssignment {
	name: String!
	dueAt: String
}

input AssignmentInput {
	name: String
	dueAt: String
	module: ID
}

input CourseInput {
	name: String!
}

input ModuleFeedbackInput {
	feedback: String!
	rating: Int!
}

input ModuleFeedbackUpdate {
	feedback: String
	rating: Int
}

type Mutation {
	deleteModule(id: ID!): Module
	addModule(input: NewModule): Module!
	updateModule(input: UpdateModule): Module

	deleteCourse(id: ID!): Course
	addCourse(module: ID!, input: CourseInput): Course!
	updateCourse(id: ID!, input: CourseInput): Course

	deleteAssignment(module: ID!, id: ID!): Module
	updateAssignment(id: ID!, input: AssignmentInput): Assignment

	addModuleFeedback(moduleId: ID!, userId: ID!, input: ModuleFeedbackInput): Module
	updateModuleFeedback(id: ID!, input: ModuleFeedbackUpdate): ModuleFeedback
	deleteModuleFeedback(id: ID!): ModuleFeedback
}
