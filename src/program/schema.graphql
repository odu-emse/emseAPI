enum UserRole {
	STUDENT
	TEACHER
	GRADER
}

type ModuleEnrollment {
	id: ID!
	enrolledAt: String!
	role: UserRole!
	module: Module!
	plan: ID!
}

type Module {
	id: ID!
	moduleNumber: Int!
	moduleName: String!
	description: String!
	duration: Float!
	intro: String!
	numSlides: Int!
	keywords: [String!]!
	createdAt: String!
	updatedAt: String!

	assignments: [ID!]
	members: [ModuleEnrollment!]
	feedback: [ID!]
	parentCourses: [ID!]!
}

type Error {
	message: String
}

type Query {
	modules: [Module!]!
	module(id: ID!): Module
}

input NewModule {
	moduleNumber: Int!
	moduleName: String!
	description: String!
	duration: Float!
	intro: String!
	numSlides: Int!
	keywords: [String!]!
}

input UpdateModule {
	id: ID!
	moduleName: String
	moduleNumber: Int
	intro: String
	description: String
	duration: Float
	numSlides: Int

	feedback: [ID]
	keywords: [String]
	assignments: [ID]
	members: [ModuleEnrollment]
	courses: [ID]
}

type Mutation {
	deleteModule(id: ID!): User
	addModule(input: NewModule): Module!
	updateModule(input: UpdateModule): Module
}
