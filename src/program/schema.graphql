enum UserRole {
	STUDENT
	TEACHER
	GRADER
}

type ModuleEnrollment {
	id: ID! 
	"""
	id of the ModuleEnrollment
	"""

	enrolledAt: String!
	"""
	TimeStamp at which the module is enrolledAt
	"""

	role: UserRole!
	"""
	Role of the user:Either Student, Teacher or Grader
	"""

	module: Module!
	"""
	Current Module
	"""

	plan: PlanOfStudy!
	"""
	Plan of study Chosen
	"""
}

type AssignmentResult {
	id: ID!
	"""
	id of AssignmentResult
	"""

	submittedAt: String!
	"""
	Time at which the Assignement Result is given
	"""

	result: Float!
	"""
	result of the Assignement
	"""

	feedback: String
	"""
	feedback given on the Assignment
	"""

	student: PlanOfStudy
	"""
	Assignement Result of the student
	"""

	gradedBy: User
	"""
	Assignement graded by the User
	"""

	assignment: Assignment
	"""
	Assignement to which result is given
	"""
}

type Assignment {
	id: ID!
	"""
	Assignment id
	"""

	updatedAt: String!
	"""
	date and time at which assignment is updated
	"""

	name: String!
	"""
	Name of the assignment
	"""

	dueAt: String
	"""
	due of the assignment
	"""

	module: Module!
	"""
	Assignment belonging to the module
	"""

	assignmentResults: [AssignmentResult]
	"""
	Assignment Result
	"""
}

type ModuleFeedback {
	id: ID!
	"""
	id of ModuleFeedback
	"""

	feedback: String!
	"""
	Feedback fo the Module
	"""

	rating: Int!
	"""
	Rating given in the feedback
	"""

	student: User
	"""
	Module feedback given by the student
	"""

	module: Module
	"""
	Module in which module feedback is given
	"""

}

type Course {
	id: ID!
	"""
	course id
	"""
	name: String!
	"""
	Name of the course
	"""

	modules: [ModuleInCourse]
	"""
	modules in the course
	"""
}

type Module {
	id: ID!
	"""
	Module Id
	"""

	moduleNumber: Int!
	"""
	Number of the Module
	""""

	moduleName: String!
	"""
	Name of hte Module
	"""

	description: String!
	"""
	Description of the Module
	"""

	duration: Float!
	"""
	Duration of the Module
	"""

	intro: String!
	"""
	Introduction of the Module
	"""

	numSlides: Int!
	"""
	No of slides in the Module
	"""

	keywords: [String!]!
	"""
	Keywords in the Modules
	"""

	createdAt: String!
	"""
	Date and Time of the Module Created at
	"""

	updatedAt: String!
	"""
	Date and Time of the Module Updated at
	"""

	assignments: [Assignment]
	"""
	Assignement in the module
	"""

	members: [ModuleEnrollment]
	"""
	Memebers enrolled in the Module
	"""

	feedback: [ModuleFeedback]
	"""
	Feedback of the Module
	"""

	parentCourses: [ModuleInCourse]
	"""
	Parent Courses in the Modules
	"""

	parentModules: [Requirement]
	"""
	Parent Modules of the Module
	"""

	childModules: [Requirement]
	"""
	Childmodules in the Module
	"""
}
type Requirement{
	id: ID!
	"""
	id of Requirement
	"""

	child: Module!
	"""
	Child module in requirement
	"""

	parent: Module!
	"""
	Parent Module in Requirement
	"""
}

type ModuleInCourse {
	id: ID!
	"""
	id of ModuleInCourse
	"""

	module: Module
	"""
	Module in ModuleInCourse
	"""

	course: Course
	"""
	Course in ModuleInCourse
	"""
}

type Error {
	message: String
	"""
	Error message
	"""
}

type Query {
	modules: [Module!]!
	"""
	List of All modules in the Query
	"""
	module(id: ID!): Module
	"""
	Specific Module in the Modules
	"""

	course(id: ID!): Course
	"""
	Specific Course in the Courses
	"""
	courses: [Course!]!
	"""
	List of all courses
	"""

	assignments: [Assignment!]!
	"""
	Specific assignment in assignments
	"""
	assignment(id: ID!): Assignment
	"""
	List of all assignments
	"""

	moduleInCourses: [ModuleInCourse!]!
	""""
	Modules in the courses
	"""

	moduleFeedbacks: [ModuleFeedback!]!
	"""
	Module feedbacks
	"""
	moduleFeedback(id: ID!): ModuleFeedback
	"""
	Specific module feedback in modulefeedbacks
	"""

	assignmentResults: [AssignmentResult!]!
	"""
	Specific assisgnement result
	"""
	assignmentResult(id: ID!): AssignmentResult
	"""
	list of all assignment Results
	"""

	moduleEnrollments: [ModuleEnrollment!]!
	"""
	List of module enrollment
	"""
	moduleEnrollment(id: ID!): ModuleEnrollment
	"""
	Specific Moduleenrollment in Moduleenrollment
	"""

}

input NewModule {
	moduleNumber: Int!
	"""
	Number of the Module
	"""
	moduleName: String!
	"""
	Name of the Module
	"""
	description: String!
	"""
	description of the Module
	"""
	duration: Float!
	"""
	Duration of the NewModule
	"""
	intro: String!
	"""
	Introduction of the NewModule
	"""
	numSlides: Int!
	"""
	Number of Slides in NewModule
	"""
	keywords: [String!]!
	"""
	keywords of the NewModule
	"""
}

input UpdateModule {
	id: ID!
	"""
	UpdateModule id
	"""
	moduleName: String
	"""
	Module Name of the UpdateModule
	"""
	moduleNumber: Int
	"""
	Module NUmber of the UpdateModule
	"""
	intro: String
	"""
	Introduction of the UpdateModule
	"""
	description: String
	"""
	Decription of the UpdateModule
	"""
	duration: Float
	"""
	Duration of the UpdateModule
	"""
	numSlides: Int
	"""
	Number of slides in Updatemodule
	"""
	keywords: [String!]
	"""
	Keywords in UpdateModule
	"""
}

input NewAssignment {
	name: String!
	"""
	Name of the NewAssignement
	"""
	dueAt: String!
	"""
	Due date and Time of NewAssignment
	"""
	module: ID!
	"""
	Module to which the NewAssignement Belongs to
	"""
}

input AssignmentInput {
	name: String
	"""
	New Name of the Assignment
	"""
	dueAt: String
	"""
	New Due date and time of the Assignement
	"""
	module: ID
	"""
	Updated module linkage
	"""
}

input CourseInput {
	name: String!
	"""
	New Name of the Course
	"""
}

input ModuleFeedbackInput {
	feedback: String!
	"""
	New Feedback of the Module
	"""
	rating: Int!
	"""
	New Rating of the Module
	"""
}

input ModuleFeedbackUpdate {
	feedback: String
	"""
	Updated feedback of Module
	"""
	rating: Int
	"""
	Updated feedback of Module
	"""
}

input NewAssignmentResult {
	assignment: ID!
	"""
	Relating assignment result to assignment"""
	"""
	student: ID!
	"""
	Relating Assignment Result to Student
	"""
	grader: ID!
	"""
	Relating Assignment Result to Grader
	"""

	result: Float!
	"""
	result of the NewAssignement
	"""
}

input ModuleEnrollmentInput {
	module: ID!
	"""
	Relating Module to ModuleEnrollment
	"""
	plan: ID!
	"""
	Relating Plan to MOdule enrollment
	"""
	role: UserRole!
	"""
	Relating role to ModuleEnrollment
	"""
}

type Mutation {
	deleteModule(id: ID!): Module
	"""
	Deletes the entire Module
	"""
	addModule(input: NewModule): Module!
	"""
	Adds an entire module
	"""
	updateModule(input: UpdateModule): Module
	"""
	updates a Module
	"""

	addRequirement(parentId: String, childId: String): Requirement
	"""
	adds Requirements 
	"""
	removeRequirement(parentId: String, childId: String): Requirement
	"""
	Removes requirements
	"""

	deleteCourse(id: ID!): Course
	"""
	deletes all Courses referring id
	"""
	addCourse(input: CourseInput): Course!
	"""
	adds Courses
	"""
	updateCourse(id: ID!, input: CourseInput): Course
	"""
	Updates Courses
	"""

	addAssignment(input: NewAssignment): Assignment!
	"""
	adds assignement in module
	"""
	deleteAssignment(module: ID!, id: ID!): Module
	"""
	Deletes assignments in Module
	"""
	updateAssignment(id: ID!, input: AssignmentInput): Assignment
	"""
	Updates Assignements
	"""

	addModuleFeedback(
		moduleId: ID!
		"""
		Module Feedback is given relating to Moduleid
		"""
		userId: ID!
		"""
		Module Feedback is given relating to Userid
		"""
		input: ModuleFeedbackInput
		"""
		Module Feedback is given relating to Modulefeedbackinput
		"""
	): Module
	updateModuleFeedback(id: ID!, input: ModuleFeedbackUpdate): ModuleFeedback
	"""
	Module feedback is updated
	"""
	deleteModuleFeedback(id: ID!): ModuleFeedback
	"""
	Module feedback is deleted
	"""

	addAssignmentResult(input: NewAssignmentResult): AssignmentResult!
	"""
	Assignment Result is added
	"""
	updateAssignmentResult(id: ID!, result: Float!): AssignmentResult
	"""
	Assignment Reuslt is Updated
	"""
	deleteAssignmentResult(id: ID!): AssignmentResult
	"""
	Assignment result is deleted
	"""

	addModuleEnrollment(input: ModuleEnrollmentInput): ModuleEnrollment!
	updateModuleEnrollment(
		id: ID!
		"""
		Module enrollment is updated relating to id
		"""
		input: ModuleEnrollmentInput
		"""
		Module enrollement input
		"""
	): ModuleEnrollment
	deleteModuleEnrollment(id: ID!): ModuleEnrollment
	"""
	Delete ModuleEnrollment
	"""
	
	pairCourseModule(courseId: ID!, moduleId: ID!): ModuleInCourse!
	"""
	Course Module is paired Relating Course ID and module Id
	"""
	unpairCourseModule(courseId: ID!, moduleId: ID!): ModuleInCourse
	"""
	Course Module is Unpaired Relating to Course Id and mobile Id
	"""
}
