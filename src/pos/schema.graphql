type PlanOfStudy {
	id: ID!
	student: User
	"""
	Name of the Student Account
	"""

	modules: [ModuleEnrollment]
	"""
	Modules that are enrolled by the Student
	"""

	assignmentResults: [AssignmentResult!]
	"""
	Results obtained for the Assignement Taken
	"""

	courses: [CourseEnrollment]
	"""
	Courses that are enrolled by the Student
	"""

	modulesleft:[Module]
	"""
	Modules to be completed
	"""

}

input PlanInput {
	student: ID
}

type Query {
	plan(studentID: ID!): PlanOfStudy
	"""
	student PlanOfStudy by id
	"""

	plans: [PlanOfStudy!]
	"""
	All the plans in the PlanOfStudy
	"""

	planByID(id: String!): PlanOfStudy
	"""
	PlanOfStudy by the Documentid
	"""
}

type Mutation {
	addPlan(input: PlanInput): PlanOfStudy!
	"""
	Plan added to present PlanOfStudy
	"""

	updatePlan(id: ID!, input: PlanInput): PlanOfStudy
	"""
	Updating the PlanOfStudy
	"""

	deletePlan(id: ID!): PlanOfStudy
	"""
	Deleting the PlanOfStudy
	"""
}
